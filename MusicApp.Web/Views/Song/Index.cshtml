@model MusicApp.Domain.Entities.Music.SongTables

@{
     ViewBag.Title = "Index";
}

<!DOCTYPE html>
<html lang="en">
<head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Simple Music Player</title>
     <style>
          /* Custom styles for the audio player */
          .audio-player {
               display: flex;
               align-items: center;
               gap: 10px;
               max-width: 600px;
               margin: auto;
          }

          .play-pause-btn, .volume-control {
               cursor: pointer;
               background-color: #4CAF50;
               border: none;
               color: white;
               padding: 10px;
               text-align: center;
               text-decoration: none;
               display: inline-block;
               font-size: 16px;
               border-radius: 5px;
          }

               .play-pause-btn:disabled {
                    background-color: #ccc;
                    cursor: not-allowed;
               }

          .progress-bar {
               flex: 1;
               height: 10px;
               background-color: #ddd;
               cursor: pointer;
               position: relative;
               border-radius: 5px;
               overflow: hidden;
          }

          .progress {
               height: 100%;
               background-color: #4CAF50;
               width: 0;
          }

          .volume-control {
               width: 100px;
          }
     </style>
</head>
<body>
     <div class="audio-player">
          <button id="playPauseBtn" class="play-pause-btn" disabled>Play</button>
          <div class="progress-bar" id="progressBar">
               <div class="progress" id="progress"></div>
          </div>
          <input type="range" id="volumeControl" class="volume-control" min="0" max="1" step="0.01">
     </div>
     <audio id="audio">
          <source id="audioSource" src="~/Vendor/audio/test1.mp3" type="audio/mp3">
          Your browser does not support the audio element.
     </audio>

     <script>
        document.addEventListener('DOMContentLoaded', function () {
            const audio = document.getElementById('audio');
            const playPauseBtn = document.getElementById('playPauseBtn');
            const progressBar = document.getElementById('progressBar');
            const progress = document.getElementById('progress');
            const volumeControl = document.getElementById('volumeControl');

            playPauseBtn.addEventListener('click', function () {
                if (audio.paused) {
                    audio.play();
                    playPauseBtn.textContent = 'Pause';
                } else {
                    audio.pause();
                    playPauseBtn.textContent = 'Play';
                }
            });

            audio.addEventListener('timeupdate', function () {
                const percentage = (audio.currentTime / audio.duration) * 100;
                progress.style.width = percentage + '%';
            });

            progressBar.addEventListener('click', function (e) {
                const rect = progressBar.getBoundingClientRect();
                const offsetX = e.clientX - rect.left;
                const percentage = offsetX / progressBar.offsetWidth;
                audio.currentTime = percentage * audio.duration;
            });

            volumeControl.addEventListener('input', function () {
                audio.volume = volumeControl.value;
            });

            function loadSong(url) {
                document.getElementById('audioSource').src = url;
                audio.load();
                playPauseBtn.disabled = false;
            }

            // Example usage: load a song and enable the play button
            loadSong('@Url.Content("~/Vendor/audio/test.mp3")');
        });
     </script>
</body>
</html>
