
@{
     ViewBag.Title = "AudioPLayer";
}

<!----Audio Player Section---->
<div class="ms_player_wrapper">
     <div class="ms_player_close">
          <i class="fa fa-angle-up" aria-hidden="true"></i>
     </div>
     <div class="player_mid">
          <div class="audio-player">
               <div id="jquery_jplayer_1" class="jp-jplayer"></div>
               <div id="jp_container_1" class="jp-audio" role="application" aria-label="media player">
                    <div class="player_left">
                         <div class="ms_play_song">
                              <div class="play_song_name">
                                   <a href="javascript:void(0);" id="playlist-text">
                                        <div class="jp-now-playing flex-item">
                                             <div class="jp-track-name"></div>
                                             <div class="jp-artist-name"></div>
                                        </div>
                                   </a>
                              </div>
                         </div>
                         <div class="play_song_options">
                              <ul>
                                   <li><a href="#"><span class="song_optn_icon"><i class="ms_icon icon_download"></i></span>download now</a></li>
                                   <li><a href="#"><span class="song_optn_icon"><i class="ms_icon icon_fav"></i></span>Add To Favourites</a></li>
                                   <li><a href="#"><span class="song_optn_icon"><i class="ms_icon icon_playlist"></i></span>Add To Playlist</a></li>
                                   <li><a href="#"><span class="song_optn_icon"><i class="ms_icon icon_share"></i></span>Share</a></li>
                              </ul>
                         </div>
                         <span class="play-left-arrow"><i class="fa fa-angle-right" aria-hidden="true"></i></span>
                    </div>
                    <!----Right Queue---->
                    <div class="jp_queue_wrapper">
                         <span class="que_text" id="myPlaylistQueue"><i class="fa fa-angle-up" aria-hidden="true"></i> queue</span>
                         <div id="playlist-wrap" class="jp-playlist">
                              <div class="jp_queue_cls"><i class="fa fa-times" aria-hidden="true"></i></div>
                              <h2>queue</h2>
                              <div class="jp_queue_list_inner">
                                   <ul>
                                        <li>&nbsp;</li>
                                   </ul>
                              </div>
                              <div class="jp_queue_btn">
                                   <a href="javascript:;" class="ms_clear" data-toggle="modal" data-target="#clear_modal">clear</a>
                                   <a href="clear_modal.html" class="ms_save" data-toggle="modal" data-target="#save_modal">save</a>
                              </div>
                         </div>
                    </div>
                    <div class="jp-type-playlist">
                         <div class="jp-gui jp-interface flex-wrap">
                              <div class="jp-controls flex-item">
                                   <button class="jp-previous" tabindex="0">
                                        <i class="ms_play_control"></i>
                                   </button>
                                   <button class="jp-play" tabindex="0">
                                        <i class="ms_play_control"></i>
                                   </button>
                                   <button class="jp-next" tabindex="0">
                                        <i class="ms_play_control"></i>
                                   </button>
                              </div>
                              <div class="jp-progress-container flex-item">
                                   
                                   <!--   Player Sart  -->
                                   <!--
                                   <div class="jp-progress">
                                        <div class="jp-seek-bar">
                                             <div class="jp-play-bar">
                                                  <div class="bullet">
                                                  </div>
                                             </div>
                                        </div>
                                   </div>
                                   -->
                                   <div class="audiocustom">
                                        <button id="playPauseBtn" class="play-pause-btn" disabled><i class="fa fa-play" aria-hidden="true"></i></button>
                                        <div class="progress-barcutsom" id="progressBar">
                                             <div class="progress" id="progress"></div>
                                        </div>
                                        <input type="range" id="volumeControl" class="volume-control" min="0" max="1" step="0.01">
                                   </div>
                                   <audio id="audio">
                                        <source id="audioSource" src="~/Vendor/audio/test1.mp3" type="audio/mp3">
                                        Your browser does not support the audio element.
                                   </audio>
                                   <!-- Player Stop-->
                              </div>
                              <div class="jp-volume-controls flex-item">
                                   <div class="widget knob-container">
                                        <div class="knob-wrapper-outer">
                                             <div class="knob-wrapper">
                                                  <div class="knob-mask">
                                                       <div class="knob d3"><span></span></div>
                                                       <div class="handle"></div>
                                                       <div class="round">
                                                            <img src="images/svg/volume.svg" alt="">
                                                       </div>
                                                  </div>
                                             </div>
                                             <!-- <input></input> -->
                                        </div>
                                   </div>
                              </div>
                              <div class="jp-toggles flex-item">
                                   <button class="jp-shuffle" tabindex="0" title="Shuffle">
                                        <i class="ms_play_control"></i>
                                   </button>
                                   <button class="jp-repeat" tabindex="0" title="Repeat"><i class="ms_play_control"></i></button>
                              </div>
                         </div>
                    </div>
               </div>
          </div>
     </div>
     <!--main div-->
</div>

<style>
     /* Custom styles for the audio player */
     .audiocustom {
          display: flex;
          align-items: center;
          gap: 10px;
          max-width: 600px;
          margin: auto;
     }

     .play-pause-btn, .volume-control {
          cursor: pointer;
          background-color: #4CAF50;
          border: none;
          color: white;
          padding: 10px;
          text-align: center;
          text-decoration: none;
          display: inline-block;
          font-size: 16px;
          border-radius: 5px;
     }


     .progress-barcutsom {
          flex: 1;
          height: 10px;
          background-color: #ddd;
          cursor: pointer;
          position: relative;
          border-radius: 5px;
          overflow: hidden;
     }

     .progress {
          height: 100%;
          background-color: #4CAF50;
          width: 0;
     }

     .volume-control {
          width: 100px;
     }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const playPauseBtn = document.getElementById('playPauseBtn');
        const progressBar = document.getElementById('progressBar');
        const progress = document.getElementById('progress');
         const volumeControl = document.getElementById('volumeControl');
         const audio = $('#audio')[0];
         const playPauseBtn = $('#playPause');
         const stopBtn = $('#stop');
         const prevBtn = $('#prev');
         const nextBtn = $('#next');
         let currentSongIndex = 0;
         let songs = [];

               function loadSong(index) {
         const song = songs[index];
         if (song) {
             $('#audioSource').attr('src', `@Url.Action("GetSong", "Song")?id=${song.Id}`);
             audio.load();
             audio.play();
             playPauseBtn.text('Pause');
         }
         }

         prevBtn.on('click', function () {
              if (currentSongIndex > 0) {
                   currentSongIndex--;
                   loadSong(currentSongIndex);
              }
         });

         nextBtn.on('click', function () {
              if (currentSongIndex < songs.length - 1) {
                   currentSongIndex++;
                   loadSong(currentSongIndex);
              }
         });

        playPauseBtn.addEventListener('click', function () {
            if (audio.paused) {
                audio.play();
                 playPauseBtn.innerHTML = '<i class="fa fa-pause" aria-hidden="true"></i>' ; // Update icon for pause
            } else {
                audio.pause();
                 playPauseBtn.innerHTML = '<i class="fa fa-play" aria-hidden="true"></i>'; // Update icon for play
            }
        });

        audio.addEventListener('timeupdate', function () {
            const percentage = (audio.currentTime / audio.duration) * 100;
            progress.style.width = percentage + '%';
        });

        progressBar.addEventListener('click', function (e) {
            const rect = progressBar.getBoundingClientRect();
            const offsetX = e.clientX - rect.left;
            const percentage = offsetX / progressBar.offsetWidth;
            audio.currentTime = percentage * audio.duration;
        });

        volumeControl.addEventListener('input', function () {
            audio.volume = volumeControl.value;
        });


        function loadSong(url) {
            document.getElementById('audioSource').src = url;
            audio.load();
            playPauseBtn.disabled = false;
         }



          // Load the list of songs from the server
          $.ajax({
              url: '@Url.Action("GetSongs", "Song")',
              method: 'GET',
              success: function (data) {
                  songs = data;
                  if (songs.length > 0) {
                      loadSong(currentSongIndex);
                  }
              }
          });
    });
</script>


<script>
   $(document).ready(function () {
       const audio = $('#audio')[0];
       const playPauseBtn = $('#playPause');
       const stopBtn = $('#stop');
       const prevBtn = $('#prev');
       const nextBtn = $('#next');
       let currentSongIndex = 0;
       let songs = [];

       function loadSong(index) {
           const song = songs[index];
           if (song) {
               $('#audioSource').attr('src', `@Url.Action("GetSong", "Song")?id=${song.Id}`);
               audio.load();
               audio.play();
               playPauseBtn.text('Pause');
           }
       }

       playPauseBtn.on('click', function () {
           if (audio.paused) {
               audio.play();
               playPauseBtn.text('Pause');
           } else {
               audio.pause();
               playPauseBtn.text('Play');
           }
       });

       stopBtn.on('click', function () {
           audio.pause();
           audio.currentTime = 0;
           playPauseBtn.text('Play');
       });

       prevBtn.on('click', function () {
           if (currentSongIndex > 0) {
               currentSongIndex--;
               loadSong(currentSongIndex);
           }
       });

       nextBtn.on('click', function () {
           if (currentSongIndex < songs.length - 1) {
               currentSongIndex++;
               loadSong(currentSongIndex);
           }
       });


       // Load the list of songs from the server
       $.ajax({
           url: '@Url.Action("GetSongs", "Song")',
           method: 'GET',
           success: function (data) {
               songs = data;
               if (songs.length > 0) {
                   loadSong(currentSongIndex);
               }
           }
       });
   });
</script>